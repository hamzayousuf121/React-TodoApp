{"version":3,"sources":["Components/Todos.js","App.js","serviceWorker.js","store/Reducer.js","store/index.js","index.js"],"names":["connect","state","todos","item","value","editValue","filterSearch","props","dispatch","useDispatch","filterTodo","filter","todo","title","toLowerCase","includes","className","type","placeholder","onChange","e","payload","target","onClick","obj","edit","map","i","setEditTodo","index","editTodo","App","Todos","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","store","createStore","action","newtodos","splice","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e14abf92.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport './todos.css';\r\n\r\nconst App = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const add_todo = () => {\r\n        if (props.item !== '' && props.item !== ' ') {\r\n            let obj = { title: props.item, edit: false }\r\n            dispatch({ type: 'add_Todo', payload: obj })\r\n        }\r\n    }\r\n\r\n    const handleTodo = (e) => {\r\n        dispatch({ type: 'change_todo', payload: e.target.value })\r\n    }\r\n\r\n    const delete_all_todo = (e) => {\r\n        dispatch({ type: 'delete_all_todo' })\r\n    }\r\n\r\n    const delete_todo = (index) => {\r\n        dispatch({ type: 'delete_Todo', payload: index })\r\n    }\r\n    const setSearchValue = (e) => {\r\n        dispatch({ type: 'filter_Search', payload: e.target.value })\r\n    }\r\n\r\n    const setEditTodo = (item) => {\r\n        dispatch({ type: 'setEditTodo', payload: item })\r\n    }\r\n\r\n    const editTodo = (index, item) => {\r\n        dispatch({ type: 'edit_Todo', payload: { index, item } })\r\n    }\r\n    const updateTodo = (index) => {\r\n        dispatch({ type: 'update_Todo', payload: { index } })\r\n    }\r\n\r\n    const { todos, item, filterSearch, editValue } = props;\r\n    const filterTodo = todos.filter(todo => todo.title.toLowerCase().includes(filterSearch.toLowerCase()))\r\n    return (\r\n        <div className=\"container hoverable\">\r\n            <h1 className=\"heading\">React Todo App</h1>\r\n            <div className=\"formField\">\r\n            <div className=\"input\">\r\n                <input type=\"text\" placeholder=\"Enter Todo name\"\r\n                    value={item}\r\n                    onChange={handleTodo}\r\n                />\r\n                </div>\r\n                <div className=\"buttons\">\r\n                <button className=\"waves-effect waves-light btn edit\" onClick={add_todo}>Add Todo</button>\r\n                <button className=\"waves-effect waves-light btn red lighten-1 ml-5\" onClick={delete_all_todo}>Delete All Todo</button>\r\n            </div>\r\n            </div>\r\n            <div className=\"input\">\r\n                <input type=\"search\" placeholder=\"Search Todo name\" value={filterSearch}\r\n                    onChange={setSearchValue} />\r\n            </div>\r\n            <div className=\"collection hoverable\">\r\n                {filterTodo.map((item, i) => {\r\n                    return (<div key={i} className=\"collection-item\">\r\n                        {item.edit ? <input type=\"text\" value={editValue}\r\n                            onChange={(e) => setEditTodo(e.target.value)} />\r\n                            : item.title}\r\n                        {item.edit ?\r\n\r\n                            <button className=\"btn waves-effect waves-light edit\" onClick={() => updateTodo(i)}> Update </button> :\r\n                            <button className=\"btn waves-effect waves-light edit\" onClick={() => editTodo(i, item.title)}> Edit </button>}\r\n                            <button className=\"btn waves-effect waves-light red lighten-1\" onClick={() => delete_todo(i)}> Delete </button>\r\n\r\n                    </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos,\r\n        item: state.value,\r\n        editValue: state.editValue,\r\n        filterSearch: state.filterSearch\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React, { Component } from 'react';\r\nimport Todos from './Components/Todos'\r\n\r\nclass App extends Component {  \r\n  render() {\r\n    return (\r\n      <Todos />\r\n    );\r\n   }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    todos: [{ title: 'hamza', edit: false }, { title: 'yousuf', edit: false }, { title: 'Saylani', edit: false }],\r\n    value: '',\r\n    editValue: '',\r\n    filterSearch: ''\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'change_todo':\r\n\r\n            return ({\r\n                ...state,\r\n                value: action.payload\r\n            })\r\n\r\n        case 'filter_Search':\r\n\r\n            return ({\r\n                ...state,\r\n                filterSearch: action.payload\r\n            })\r\n\r\n        case 'add_Todo':\r\n\r\n            return ({\r\n                ...state,\r\n                value: '',\r\n                todos: [...state.todos, action.payload]\r\n            });\r\n\r\n        case 'delete_Todo':\r\n            const newtodos = [...state.todos]\r\n            newtodos.splice(action.payload, 1)\r\n            return ({\r\n\r\n                ...state,\r\n                todos: newtodos\r\n            });\r\n\r\n        case 'delete_all_todo':\r\n\r\n            return ({\r\n                ...state,\r\n                todos: []\r\n            });\r\n\r\n        case 'setEditTodo':\r\n\r\n            return ({\r\n                ...state,\r\n                editValue: action.payload\r\n            });\r\n\r\n        case 'edit_Todo':\r\n\r\n            state.todos[action.payload.index].edit = true;\r\n\r\n            return ({\r\n                ...state,\r\n                editValue: action.payload.item,\r\n                todos: state.todos\r\n            });\r\n\r\n        case 'update_Todo':\r\n\r\n            state.todos[action.payload.index].edit = false;\r\n            state.todos[action.payload.index].title = state.editValue;\r\n\r\n            return ({\r\n                ...state,\r\n                editValue: '',\r\n                todos: state.todos\r\n            });\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport {todoReducer} from './Reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const store = createStore(todoReducer, composeWithDevTools(\r\n    applyMiddleware()\r\n));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.register();\r\n"],"sourceRoot":""}